{"version":3,"file":"js/388-legacy.cf38b4dd.js","mappings":"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","sources":["webpack://vuetify-with/../../../src/components/VChip/VChip.ts","webpack://vuetify-with/../../../src/components/VThemeProvider/VThemeProvider.ts","webpack://vuetify-with/../../../src/mixins/activatable/index.ts","webpack://vuetify-with/../../../src/mixins/delayable/index.ts","webpack://vuetify-with/../../../src/mixins/detachable/index.ts","webpack://vuetify-with/../../../src/mixins/returnable/index.ts","webpack://vuetify-with/../../../src/mixins/stackable/index.ts"],"sourcesContent":["// Styles\nimport './VChip.sass'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n// Components\nimport { VExpandXTransition } from '../transitions'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\nimport { PropValidator, PropType } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Sizeable,\n  Routable,\n  Themeable,\n  GroupableFactory('chipGroup'),\n  ToggleableFactory('inputValue')\n).extend({\n  name: 'v-chip',\n\n  props: {\n    active: {\n      type: Boolean,\n      default: true,\n    },\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.chipGroup) return ''\n\n        return this.chipGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    close: Boolean,\n    closeIcon: {\n      type: String,\n      default: '$delete',\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close',\n    },\n    disabled: Boolean,\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: Boolean,\n    outlined: Boolean,\n    pill: Boolean,\n    tag: {\n      type: String,\n      default: 'span',\n    },\n    textColor: String,\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-chip--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-chip': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-chip--clickable': this.isClickable,\n        'v-chip--disabled': this.disabled,\n        'v-chip--draggable': this.draggable,\n        'v-chip--label': this.label,\n        'v-chip--link': this.isLink,\n        'v-chip--no-color': !this.color,\n        'v-chip--outlined': this.outlined,\n        'v-chip--pill': this.pill,\n        'v-chip--removable': this.hasClose,\n        ...this.themeClasses,\n        ...this.sizeableClasses,\n        ...this.groupClasses,\n      }\n    },\n    hasClose (): boolean {\n      return Boolean(this.close)\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.chipGroup\n      )\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['outline', 'outlined'],\n      ['selected', 'input-value'],\n      ['value', 'active'],\n      ['@input', '@active.sync'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      this.$emit('click', e)\n\n      this.chipGroup && this.toggle()\n    },\n    genFilter (): VNode {\n      const children = []\n\n      if (this.isActive) {\n        children.push(\n          this.$createElement(VIcon, {\n            staticClass: 'v-chip__filter',\n            props: { left: true },\n          }, this.filterIcon)\n        )\n      }\n\n      return this.$createElement(VExpandXTransition, children)\n    },\n    genClose (): VNode {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-chip__close',\n        props: {\n          right: true,\n          size: 18,\n        },\n        attrs: {\n          'aria-label': this.$vuetify.lang.t(this.closeLabel),\n        },\n        on: {\n          click: (e: Event) => {\n            e.stopPropagation()\n            e.preventDefault()\n\n            this.$emit('click:close')\n            this.$emit('update:active', false)\n          },\n        },\n      }, this.closeIcon)\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-chip__content',\n      }, [\n        this.filter && this.genFilter(),\n        this.$slots.default,\n        this.hasClose && this.genClose(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genContent()]\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      draggable: this.draggable ? 'true' : undefined,\n      tabindex: this.chipGroup && !this.disabled ? 0 : data.attrs!.tabindex,\n    }\n    data.directives!.push({\n      name: 'show',\n      value: this.active,\n    })\n    data = this.setBackgroundColor(this.color, data)\n\n    const color = this.textColor || (this.outlined && this.color)\n\n    return h(tag, this.setTextColor(color, data), children)\n  },\n})\n","// Mixins\nimport Themeable from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default Themeable.extend({\n  name: 'v-theme-provider',\n\n  props: { root: Boolean },\n\n  computed: {\n    isDark (): boolean {\n      return this.root\n        ? this.rootIsDark\n        : Themeable.options.computed.isDark.call(this)\n    },\n  },\n\n  render (): VNode {\n    /* istanbul ignore next */\n    return (\n      this.$slots.default! &&\n      this.$slots.default!.find(node => !node.isComment && node.text !== ' ')!\n    )\n  },\n})\n","// Mixins\nimport Delayable from '../delayable'\nimport Toggleable from '../toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { getSlot, getSlotType } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport { VNode, PropType } from 'vue'\n\ntype Listeners = Dictionary<(e: MouseEvent & KeyboardEvent & FocusEvent) => void>\n\nconst baseMixins = mixins(\n  Delayable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'activatable',\n\n  props: {\n    activator: {\n      default: null as unknown as PropType<string | HTMLElement | VNode | Element | null>,\n      validator: (val: string | object) => {\n        return ['string', 'object'].includes(typeof val)\n      },\n    },\n    disabled: Boolean,\n    internalActivator: Boolean,\n    openOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    openOnHover: Boolean,\n    openOnFocus: Boolean,\n  },\n\n  data: () => ({\n    // Do not use this directly, call getActivator() instead\n    activatorElement: null as HTMLElement | null,\n    activatorNode: [] as VNode[],\n    events: ['click', 'mouseenter', 'mouseleave', 'focus'],\n    listeners: {} as Listeners,\n  }),\n\n  watch: {\n    activator: 'resetActivator',\n    openOnFocus: 'resetActivator',\n    openOnHover: 'resetActivator',\n  },\n\n  mounted () {\n    const slotType = getSlotType(this, 'activator', true)\n\n    if (slotType && ['v-slot', 'normal'].includes(slotType)) {\n      consoleError(`The activator slot must be bound, try '<template v-slot:activator=\"{ on }\"><v-btn v-on=\"on\">'`, this)\n    }\n\n    this.addActivatorEvents()\n  },\n\n  beforeDestroy () {\n    this.removeActivatorEvents()\n  },\n\n  methods: {\n    addActivatorEvents () {\n      if (\n        !this.activator ||\n        this.disabled ||\n        !this.getActivator()\n      ) return\n\n      this.listeners = this.genActivatorListeners()\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        this.getActivator()!.addEventListener(key, this.listeners[key] as any)\n      }\n    },\n    genActivator () {\n      const node = getSlot(this, 'activator', Object.assign(this.getValueProxy(), {\n        on: this.genActivatorListeners(),\n        attrs: this.genActivatorAttributes(),\n      })) || []\n\n      this.activatorNode = node\n\n      return node\n    },\n    genActivatorAttributes () {\n      return {\n        role: (this.openOnClick && !this.openOnHover) ? 'button' : undefined,\n        'aria-haspopup': true,\n        'aria-expanded': String(this.isActive),\n      }\n    },\n    genActivatorListeners () {\n      if (this.disabled) return {}\n\n      const listeners: Listeners = {}\n\n      if (this.openOnHover) {\n        listeners.mouseenter = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('open')\n        }\n        listeners.mouseleave = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('close')\n        }\n      } else if (this.openOnClick) {\n        listeners.click = (e: MouseEvent) => {\n          const activator = this.getActivator(e)\n          if (activator) activator.focus()\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      if (this.openOnFocus) {\n        listeners.focus = (e: FocusEvent) => {\n          this.getActivator(e)\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      return listeners\n    },\n    getActivator (e?: Event): HTMLElement | null {\n      // If we've already fetched the activator, re-use\n      if (this.activatorElement) return this.activatorElement\n\n      let activator = null\n\n      if (this.activator) {\n        const target = this.internalActivator ? this.$el : document\n\n        if (typeof this.activator === 'string') {\n          // Selector\n          activator = target.querySelector(this.activator)\n        } else if ((this.activator as any).$el) {\n          // Component (ref)\n          activator = (this.activator as any).$el\n        } else {\n          // HTMLElement | Element\n          activator = this.activator\n        }\n      } else if (this.activatorNode.length === 1 || (this.activatorNode.length && !e)) {\n        // Use the contents of the activator slot\n        // There's either only one element in it or we\n        // don't have a click event to use as a last resort\n        const vm = this.activatorNode[0].componentInstance\n        if (\n          vm &&\n          vm.$options.mixins && //                         Activatable is indirectly used via Menuable\n          vm.$options.mixins.some((m: any) => m.options && ['activatable', 'menuable'].includes(m.options.name))\n        ) {\n          // Activator is actually another activatible component, use its activator (#8846)\n          activator = (vm as any).getActivator()\n        } else {\n          activator = this.activatorNode[0].elm as HTMLElement\n        }\n      } else if (e) {\n        // Activated by a click or focus event\n        activator = (e.currentTarget || e.target) as HTMLElement\n      }\n\n      // The activator should only be a valid element (Ignore comments and text nodes)\n      this.activatorElement = activator?.nodeType === Node.ELEMENT_NODE ? activator : null\n\n      return this.activatorElement\n    },\n    getContentSlot () {\n      return getSlot(this, 'default', this.getValueProxy(), true)\n    },\n    getValueProxy (): object {\n      const self = this\n      return {\n        get value () {\n          return self.isActive\n        },\n        set value (isActive: boolean) {\n          self.isActive = isActive\n        },\n      }\n    },\n    removeActivatorEvents () {\n      if (\n        !this.activator ||\n        !this.activatorElement\n      ) return\n\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        (this.activatorElement as any).removeEventListener(key, this.listeners[key])\n      }\n\n      this.listeners = {}\n    },\n    resetActivator () {\n      this.removeActivatorEvents()\n      this.activatorElement = null\n      this.getActivator()\n      this.addActivatorEvents()\n    },\n  },\n})\n","import Vue from 'vue'\n\n/**\n * Delayable\n *\n * @mixin\n *\n * Changes the open or close delay time for elements\n */\nexport default Vue.extend<Vue & { isActive?: boolean }>().extend({\n  name: 'delayable',\n\n  props: {\n    openDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n    closeDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n  },\n\n  data: () => ({\n    openTimeout: undefined as number | undefined,\n    closeTimeout: undefined as number | undefined,\n  }),\n\n  methods: {\n    /**\n     * Clear any pending delay timers from executing\n     */\n    clearDelay (): void {\n      clearTimeout(this.openTimeout)\n      clearTimeout(this.closeTimeout)\n    },\n    /**\n     * Runs callback after a specified delay\n     */\n    runDelay (type: 'open' | 'close', cb?: () => void): void {\n      this.clearDelay()\n\n      const delay = parseInt((this as any)[`${type}Delay`], 10)\n\n      ;(this as any)[`${type}Timeout`] = setTimeout(cb || (() => {\n        this.isActive = { open: true, close: false }[type]\n      }), delay)\n    },\n  },\n})\n","// Mixins\nimport Bootable from '../bootable'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue, { PropOptions } from 'vue'\nimport { VNode } from 'vue/types'\n\ninterface options extends Vue {\n  $el: HTMLElement\n  $refs: {\n    content: HTMLElement\n  }\n}\n\nfunction validateAttachTarget (val: any) {\n  const type = typeof val\n\n  if (type === 'boolean' || type === 'string') return true\n\n  return val.nodeType === Node.ELEMENT_NODE\n}\n\nfunction removeActivator (activator: VNode[]) {\n  activator.forEach(node => {\n    node.elm &&\n    node.elm.parentNode &&\n    node.elm.parentNode.removeChild(node.elm)\n  })\n}\n\n/* @vue/component */\nexport default mixins<options &\n  /* eslint-disable indent */\n  ExtractVue<typeof Bootable>\n  /* eslint-enable indent */\n>(Bootable).extend({\n  name: 'detachable',\n\n  props: {\n    attach: {\n      default: false,\n      validator: validateAttachTarget,\n    } as PropOptions<boolean | string | Element>,\n    contentClass: {\n      type: String,\n      default: '',\n    },\n  },\n\n  data: () => ({\n    activatorNode: null as null | VNode | VNode[],\n    hasDetached: false,\n  }),\n\n  watch: {\n    attach () {\n      this.hasDetached = false\n      this.initDetach()\n    },\n    hasContent () {\n      this.$nextTick(this.initDetach)\n    },\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n\n        activator.forEach(node => {\n          if (!node.elm) return\n          if (!this.$el.parentNode) return\n\n          const target = this.$el === this.$el.parentNode.firstChild\n            ? this.$el\n            : this.$el.nextSibling\n\n          this.$el.parentNode.insertBefore(node.elm, target)\n        })\n      }\n    })\n  },\n\n  mounted () {\n    this.hasContent && this.initDetach()\n  },\n\n  deactivated () {\n    this.isActive = false\n  },\n\n  beforeDestroy () {\n    if (\n      this.$refs.content &&\n      this.$refs.content.parentNode\n    ) {\n      this.$refs.content.parentNode.removeChild(this.$refs.content)\n    }\n  },\n\n  destroyed () {\n    if (this.activatorNode) {\n      const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n      if (this.$el.isConnected) {\n        // Component has been destroyed but the element still exists, we must be in a transition\n        // Wait for the transition to finish before cleaning up the detached activator\n        const observer = new MutationObserver(list => {\n          if (\n            list.some(record => Array.from(record.removedNodes).includes(this.$el))\n          ) {\n            observer.disconnect()\n            removeActivator(activator)\n          }\n        })\n        observer.observe(this.$el.parentNode!, { subtree: false, childList: true })\n      } else {\n        removeActivator(activator)\n      }\n    }\n  },\n\n  methods: {\n    getScopeIdAttrs () {\n      const scopeId = getObjectValueByPath(this.$vnode, 'context.$options._scopeId')\n\n      return scopeId && {\n        [scopeId]: '',\n      }\n    },\n    initDetach () {\n      if (this._isDestroyed ||\n        !this.$refs.content ||\n        this.hasDetached ||\n        // Leave menu in place if attached\n        // and dev has not changed target\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) return\n\n      let target\n      if (this.attach === false) {\n        // Default, detach to app\n        target = document.querySelector('[data-app]')\n      } else if (typeof this.attach === 'string') {\n        // CSS selector\n        target = document.querySelector(this.attach)\n      } else {\n        // DOM Element\n        target = this.attach\n      }\n\n      if (!target) {\n        consoleWarn(`Unable to locate target ${this.attach || '[data-app]'}`, this)\n        return\n      }\n\n      target.appendChild(this.$refs.content)\n\n      this.hasDetached = true\n    },\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'returnable',\n\n  props: {\n    returnValue: null as any,\n  },\n\n  data: () => ({\n    isActive: false,\n    originalValue: null as any,\n  }),\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.originalValue = this.returnValue\n      } else {\n        this.$emit('update:return-value', this.originalValue)\n      }\n    },\n  },\n\n  methods: {\n    save (value: any) {\n      this.originalValue = value\n      setTimeout(() => {\n        this.isActive = false\n      })\n    },\n  },\n})\n","import Vue from 'vue'\n\nimport { getZIndex } from '../../util/helpers'\n\ninterface options extends Vue {\n  $refs: {\n    content: Element\n  }\n}\n\n/* @vue/component */\nexport default Vue.extend<options>().extend({\n  name: 'stackable',\n\n  data () {\n    return {\n      stackElement: null as Element | null,\n      stackExclude: null as Element[] | null,\n      stackMinZIndex: 0,\n      isActive: false,\n    }\n  },\n  computed: {\n    activeZIndex (): number {\n      if (typeof window === 'undefined') return 0\n\n      const content = this.stackElement || this.$refs.content\n      // Return current zindex if not active\n\n      const index = !this.isActive\n        ? getZIndex(content)\n        : this.getMaxZIndex(this.stackExclude || [content]) + 2\n\n      if (index == null) return index\n\n      // Return max current z-index (excluding self) + 2\n      // (2 to leave room for an overlay below, if needed)\n      return parseInt(index)\n    },\n  },\n  methods: {\n    getMaxZIndex (exclude: Element[] = []) {\n      const base = this.$el\n      // Start with lowest allowed z-index or z-index of\n      // base component's element, whichever is greater\n      const zis = [this.stackMinZIndex, getZIndex(base)]\n      // Convert the NodeList to an array to\n      // prevent an Edge bug with Symbol.iterator\n      // https://github.com/vuetifyjs/vuetify/issues/2146\n      const activeElements = [\n        ...document.getElementsByClassName('v-menu__content--active'),\n        ...document.getElementsByClassName('v-dialog__content--active'),\n      ]\n\n      // Get z-index for all active dialogs\n      for (let index = 0; index < activeElements.length; index++) {\n        if (!exclude.includes(activeElements[index])) {\n          zis.push(getZIndex(activeElements[index]))\n        }\n      }\n\n      return Math.max(...zis)\n    },\n  },\n})\n"],"names":["mixins","Colorable","Sizeable","Routable","Themeable","GroupableFactory","ToggleableFactory","extend","name","props","active","type","Boolean","default","activeClass","String","this","chipGroup","close","closeIcon","closeLabel","disabled","draggable","filter","filterIcon","label","link","outlined","pill","tag","textColor","value","data","proxyClass","computed","classes","isClickable","isLink","color","hasClose","themeClasses","sizeableClasses","groupClasses","created","breakingProps","forEach","original","replacement","$attrs","hasOwnProperty","breaking","methods","click","e","$emit","toggle","genFilter","children","isActive","push","$createElement","VIcon","staticClass","left","VExpandXTransition","genClose","right","size","attrs","$vuetify","lang","t","on","stopPropagation","preventDefault","genContent","$slots","render","h","generateRouteLink","undefined","tabindex","directives","setBackgroundColor","setTextColor","root","isDark","rootIsDark","find","node","isComment","text","baseMixins","Delayable","Toggleable","activator","validator","val","includes","internalActivator","openOnClick","openOnHover","openOnFocus","activatorElement","activatorNode","events","listeners","watch","mounted","slotType","getSlotType","consoleError","addActivatorEvents","beforeDestroy","removeActivatorEvents","getActivator","genActivatorListeners","keys","Object","key","addEventListener","genActivator","getSlot","assign","getValueProxy","genActivatorAttributes","role","mouseenter","runDelay","mouseleave","focus","target","$el","document","querySelector","length","vm","componentInstance","$options","some","m","options","elm","currentTarget","nodeType","Node","ELEMENT_NODE","getContentSlot","self","removeEventListener","resetActivator","Vue","openDelay","Number","closeDelay","openTimeout","closeTimeout","clearDelay","clearTimeout","cb","delay","parseInt","setTimeout","open","validateAttachTarget","removeActivator","parentNode","removeChild","Bootable","attach","contentClass","hasDetached","initDetach","hasContent","$nextTick","beforeMount","Array","isArray","firstChild","nextSibling","insertBefore","deactivated","$refs","content","destroyed","isConnected","observer","MutationObserver","list","record","from","removedNodes","disconnect","observe","subtree","childList","getScopeIdAttrs","scopeId","getObjectValueByPath","$vnode","_isDestroyed","appendChild","consoleWarn","returnValue","originalValue","save","stackElement","stackExclude","stackMinZIndex","activeZIndex","window","index","getMaxZIndex","getZIndex","exclude","base","zis","activeElements","getElementsByClassName","Math","max"],"sourceRoot":""}